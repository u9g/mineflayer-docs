[[{"i":"#","p":["Welcome to Mineflayer!"]},{"l":"Mineflayer Documentation","p":["Welcome to the documentation for mineflayer. Mineflayer is a library for making mineflayer bots using nodejs.","If at any point in this guide something doesn't make sense, or you get different output then is expected by the guide, feel free to join the mineflayer discord and ask in #help"]}],[{"l":"Starting your mineflayer bot"},{"l":"0. Getting Help","p":["If at any point in this guide something doesn't make sense, or you get different output then is expected by the guide, feel free to join the mineflayer discord and ask in #help"]},{"l":"1. Make a folder","p":["No really, make a folder, and make a file called index.js into the folder."]},{"l":"2. Installing Mineflayer","p":["Open the folder you made within a terminal, and run these command:","npm init","npm install mineflayer"]},{"l":"3. Make a hello-world application","p":["Open your index.js file, and put the following code into the file"]},{"l":"4. Starting the application","p":["To start the application, simple run node index.js in your terminal. You should get output that looks like the following:","Follow the link and enter the code. then click the button. Then you should see in you console:","I have spawned!","Now you have successfully started your mineflayer bot."]}],[{"l":"Using Minecraft-Data","p":["Using minecraft-data should be one of the first steps of anybody using mineflayer, luckily it has a very simple api that is quick to learn. The best way to teach in programming is by doing, so here are a few examples of reasons you would need minecraft-data."]},{"l":"Finding the id of an item","p":["From very early, minecraft items have had an id, that is changed every minecraft version, so it is best to get this id dynamically.","Find an instance of minecraft-data to use. minecraft-data comes bundled inside of mineflayer under bot.registry, which allows for quick access.","You can simply use bot.registry.itemsByName.name.id with name being the name of an item.","Find the name of the item in minecraft-data. (For more info look at the info below)","Use the name from step 3 with the object from step 2. For example, If I was looking for an iron sword, I would use bot.registry.itemsByName.iron_sword.id","At some point in your mineflayer career, you will have to find the name of an item or block as it's called in minecraft-data. When you do, the link is at this website"]}],[{"i":"finding-items-in-bots-inventory","l":"Finding items in bot's inventory","p":["Typical Minecraft inventory","So you want to know what's in the bot's inventory... This is a very easy because of the prismarine-window integration."]},{"i":"finding-if-you-have-any-iron-swords-in-your-bots-inventory","l":"Finding if you have any iron swords in your bot's inventory","p":["Take a look at your bot's bot.inventory object, which will be used extensively when interacting with the inventory.","Find the item id of an iron sword using bot.registry for more info take a look at the Using Minecraft-Data article.","bot.inventory.items() can be used to get all items that are in the blue glass, red glass, and the sword slot as an array, just filter it down.","The final code should look like this:"]}],[{"i":"drop-items-in-bots-inventory","l":"Drop item's in bot's inventory","p":["So you're bot has been working for a while now, how do you drop the items to a player now?"]},{"i":"dropping-all-stone-in-the-bots-inventory","l":"Dropping all stone in the bot's inventory","p":["First, you will want to listen to chat for a message in which you will tell the bot to drop it's items in your direction.","2. To look at the player, take a look at Drop item's in bot's inventory","Now that we have the code for looking at the player, we can add that to our bot's chat listener:","3. To find what items to drop, take a look at Drop item's in bot's inventory","With that added, our code will now look like this:","4. Finally, we have to loop through those items, and call bot.tossStack on the stacks of items"]},{"l":"Similar tasks"},{"l":"Dropping all items in a players inventory","p":["This is exactly the same as done above, except we no longer have to filter the items, since we want to drop everything in the bot's inventory"]}],[{"l":"Reading the Tab List","p":["The tablist in minecraft looks like this:","Hypixel's Tab List"]},{"i":"reading-the-header-and-footer","l":"Reading the Header and Footer...","p":["So how do we read the You are playing on MC.HYPIXEL.NET and Ranks, Boosters MORE! STORE.HYPIXEL.NET part?","There is a convenient object on the bot object called bot.tablist, this object has a header and a footer key on it which are ChatMessage objects.","ChatMessage objects have a .toString() function on them that allows converting them to flat text.","Simple enough right? Just make sure that you call these functions at least after the bot spawns. This can be done by putting the code into a spawn event in mineflayer. Like so:"]},{"i":"now-how-do-we-read-the-players","l":"Now, How do we read the players?","p":["First, we need to know how to find the active players on the server. We have a bot.players map of player -> player object.","So in order to get all the players, we just need to get all the players out of the bot.players map. We can do that using Object.values(bot.players) which will give us an array of player objects.","These player objects have a convenient function .nameOnTablist(), which returns a ChatMessage object or null.","Knowing all that above, we can put some code together to list the players on the tablist like so:","This will print all of the names on the tablist like shown above.","As talked about above, this should only be done after the bot has called the spawn event. Putting this code into the spawn block like shown above will suffice."]}],[{"l":"Looking at a player","p":["Find a method that can make the bot look at something.","Searching the phrase \"look\" on the bot in the PrismarineJS discord yields this output:","2. Finding a way to get the player's position","Mineflayer bot's have a bot.players object that points usernames to their player objects, so we can use that. The player object has a player.entity property, and the entity object has an entity.position property, which we can give to bot.lookAt","3. Final Code:"]}]]